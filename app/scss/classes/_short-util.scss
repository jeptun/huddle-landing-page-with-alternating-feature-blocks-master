@use "../globals/" as g;
@use "../util/" as u;
@use "../mixin/" as m;

/**
 * Colors
 */

.bg-white {
  background: hsl(var(--white));
}
.bg-very-dark-cyan {
  background: hsl(var(--very-dark-cyan));
}
.clr-white {
  color: hsl(var(--white));
}
/**
 * Position
 */
.relative {
  position: relative;
}
.absolute {
  position: absolute;
}
/**
 * ### With container
 */
.container {
  --max-width: 1110px;
  --container-padding: 1rem;
  width: min(var(--max-width), 100% - (var(--container-padding) * 2));
  margin-inline: auto;
}
/**
 * ### Grid 
 */
.grid-columns {
  display: grid;
  gap: u.rem(16);

  @include u.breakpoint-up(small) {
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
  }
}
/**
 * ### Align items center 
 */
.align-itm-center {
  align-items: center;
}
/**
 * ### Align items center 
 */
.justify-cont-center {
  justify-content: center;
}
/**
 * ### Justify items center 
 */
.justify-item-center {
  justify-items: center;
}
.justify-cont-start{
  justify-content: start;
}
.justify-items-start{
  justify-items: start;
}
/**
 * Flow -Creating an upper edge for all descendants except the first.
 * inline style --> style="--flow-spacer: 1.5rem"
 */
:where(.flow :not(:first-child)) {
  margin-top: var(--flow-spacer, 1em);
}
/**
 * ### Margin Padding position
 */
.margin-bottom-700 {
  margin-block-end: g.$size-700;
}
/**
 * Padding top and bottom
 */
.padding-block-600 {
  padding-block: g.$size-600;
}
.padding-block-700 {
  padding-block: g.$size-700;
}
.padding-block-900 {
  padding-block: g.$size-900;
}
.padding-lr-400 {
  padding-inline: g.$size-400;
}
.padding-lr-600 {
  padding-inline: g.$size-600;
}
.padding-lr-800 {
  padding-inline: g.$size-800;
}

/**
 * ### Font Size
 */
.fs-400 {
  font-size: g.$size-400;
}
.fs-600 {
  font-size: g.$size-600;
}
.fs-700 {
  font-size: g.$size-700;
}
